apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: frontend
message: This is an OpenShift template to deploy frontend.
metadata:
  name: frontend
  annotations:
    description: "frontend Template"
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: frontend
  data:
    backend-url: 'http://persistence:8080'
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
    labels:
      app: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: frontend
    template:
      metadata:
        labels:
          app: frontend
        annotations:
          kubernetes.io/change-cause: ${CAUSE}
          gitcommit: ${CAUSE}
      spec:
        containers:
          - name: frontend
            image: ${IMAGE}
            env:
              - name: BACKEND_URL
                valueFrom:
                  configMapKeyRef:
                    name: frontend
                    key: backend-url
            ports:
              - containerPort: 8080
                protocol: TCP
            resources:
              requests:
                cpu: "500m"
                memory: "128Mi"
              limits:
                cpu: "1000m"
                memory: "512Mi"
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /
                port: 8080
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
- apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: frontend
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: frontend
    type: ClusterIP
    sessionAffinity: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: frontend
    labels:
      app: frontend
  spec:
    to:
      kind: Service
      name: frontend
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None
parameters:
- description: Container image to use
  name: IMAGE
  required: true
- description: Description of this deployment
  name: CAUSE
  required: true
